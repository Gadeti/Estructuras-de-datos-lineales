import random

# Lista de empleados
class Nomina:
    def __init__(self):
        self.datos = []

    def agregar(self, id_empleado, nombre, sueldo, deduccion, neto):
        self.datos.append([id_empleado, nombre, sueldo, deduccion, neto])

    def vacia(self):
        return len(self.datos) == 0

# Generar empleados aleatorios
def poblar(nomina, n):
    nombres = ["Ana", "Luis", "Carlos", "Sofía", "Pedro", "Lucía", "Marta", "Juan", "Rosa", "Diego"]
    for _ in range(n):
        id_emp = random.randint(1000, 9999)
        nom = random.choice(nombres)
        sueldo = random.randint(1000000, 4000000)
        deduccion = round(sueldo * random.uniform(0.1, 0.2))
        neto = sueldo - deduccion
        nomina.agregar(id_emp, nom, sueldo, deduccion, neto)

# Mostrar nómina
def mostrar(nomina):
    if nomina.vacia():
        print("Nómina vacía.")
        return
    print("ID\tNOMBRE\t\tSUELDO\t\tDEDUCCIÓN\tNETO")
    for d in nomina.datos:
        print(f"{d[0]}\t{d[1]:<10}\t${d[2]:,}\t${d[3]:,}\t${d[4]:,}")
    print()

# Ordenar por ID (selección)
def ordenar(nomina):
    n = len(nomina.datos)
    for i in range(n - 1):
        min_pos = i
        for j in range(i + 1, n):
            if nomina.datos[j][0] < nomina.datos[min_pos][0]:
                min_pos = j
        nomina.datos[i], nomina.datos[min_pos] = nomina.datos[min_pos], nomina.datos[i]

# Programa principal
def main():
    empleados = Nomina()
    poblar(empleados, 10)

    print("NÓMINA ORIGINAL:")
    mostrar(empleados)

    ordenar(empleados)

    print("NÓMINA ORDENADA POR ID:")
    mostrar(empleados)

# Ejecutar
if __name__ == "__main__":
    main()